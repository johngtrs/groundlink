services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    container_name: groundlink-backend
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      DB_CONNECTION: ${MYSQL_CONNECTION}
      DB_HOST: ${MYSQL_HOST}
      DB_PORT: ${MYSQL_PORT}
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USERNAME}
      DB_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8000:8000"
    user: "${UID}:${GID}"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: groundlink-frontend
    restart: unless-stopped
    ports:
      - "3000:5173"
    volumes:
      - ./frontend:/app
    stdin_open: true
    tty: true
    depends_on:
      - backend

  mysql:
    image: mysql:8
    container_name: groundlink-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=${MYSQL_ROOT_PASSWORD}
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: groundlink-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: ${MYSQL_HOST}
      PMA_PORT: ${MYSQL_PORT}
    ports:
      - "8080:80"
    depends_on:
      - mysql

volumes:
  mysql_data:
